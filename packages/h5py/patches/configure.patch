diff --git a/setup_configure.py b/setup_configure.py
index 16c355b..2273ae3 100644
--- a/setup_configure.py
+++ b/setup_configure.py
@@ -183,7 +183,8 @@ class BuildConfig:
 class HDF5LibWrapper:
 
     def __init__(self, libdirs):
-        self._load_hdf5_lib(libdirs)
+        # self._load_hdf5_lib(libdirs)
+        pass
 
     def _load_hdf5_lib(self, libdirs):
         """
@@ -248,20 +249,21 @@ class HDF5LibWrapper:
 
         Raises an exception if anything goes wrong.
         """
-        import ctypes
-        from ctypes import byref
+        # import ctypes
+        # from ctypes import byref
 
-        major = ctypes.c_uint()
-        minor = ctypes.c_uint()
-        release = ctypes.c_uint()
+        # major = ctypes.c_uint()
+        # minor = ctypes.c_uint()
+        # release = ctypes.c_uint()
 
-        try:
-            self._lib.H5get_libversion(byref(major), byref(minor), byref(release))
-        except Exception:
-            print("error: Unable to find HDF5 version")
-            raise
+        # try:
+        #     self._lib.H5get_libversion(byref(major), byref(minor), byref(release))
+        # except Exception:
+        #     print("error: Unable to find HDF5 version")
+        #     raise
 
-        return int(major.value), int(minor.value), int(release.value)
+        # return int(major.value), int(minor.value), int(release.value)
+        return (1, 12, 1)
 
     def load_function(self, func_name):
         try:
@@ -277,7 +279,7 @@ class HDF5LibWrapper:
         return True
 
     def has_mpi_support(self):
-        return self.has_functions("H5Pget_fapl_mpio", "H5Pset_fapl_mpio")
+        return False
 
     def has_ros3_support(self):
-        return self.has_functions("H5Pget_fapl_ros3", "H5Pset_fapl_ros3")
+        return False
